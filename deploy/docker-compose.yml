version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: gameforge_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: gameforge
      POSTGRES_USER: gameforge_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - gameforge_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gameforge_user -d gameforge"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: gameforge_backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://gameforge_user:${DB_PASSWORD}@postgres:5432/gameforge
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: https://518178.com
      PORT: 3000
      ADMIN_EMAIL: admin@518178.com
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - backend_uploads:/app/uploads:rw
    networks:
      - gameforge_network
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  nginx:
    image: nginx:alpine
    container_name: gameforge_nginx
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ../dist:/var/www/html:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - nginx_cache:/var/cache/nginx
      - nginx_logs:/var/log/nginx
    networks:
      - gameforge_network
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local
  nginx_cache:
    driver: local
  nginx_logs:
    driver: local

networks:
  gameforge_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16